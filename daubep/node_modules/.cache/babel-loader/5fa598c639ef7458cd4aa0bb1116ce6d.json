{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NguyenDucTuan\\\\Desktop\\\\a\\\\daubep\\\\src\\\\components\\\\DropdownMenu.js\";\nimport React, { Component } from 'react';\nimport { Dropdown, Selection } from 'react-dropdown-now';\nimport 'react-dropdown-now/style.css';\nimport '../css/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DropDownMenu extends Component {\n  render() {\n    const options = [{\n      id: 'custom-id',\n      value: '1',\n      label: /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"dropMenu\",\n        children: \"\\u1EA8n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 64\n      }, this),\n      view: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u1EA8n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 107\n      }, this)\n    }, {\n      id: 'custom-id',\n      value: \"2\",\n      label: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Hi\\u1EC7n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 71\n      }, this),\n      view: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Hi\\u1EC7n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 96\n      }, this)\n    }];\n    return /*#__PURE__*/_jsxDEV(Dropdown // disabled=\"True\"\n    , {\n      options: options,\n      value: \"One\",\n      onChange: value => console.log('change!', value),\n      onSelect: value => console.log('selected!', value) // always fires once a selection happens even if there is no change\n      ,\n      onClose: closedBySelection => console.log('closedBySelection?:', closedBySelection),\n      onOpen: () => console.log('open!')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/NguyenDucTuan/Desktop/a/daubep/src/components/DropdownMenu.js"],"names":["React","Component","Dropdown","Selection","DropDownMenu","render","options","id","value","label","view","console","log","closedBySelection"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAO,8BAAP;AACA,OAAO,kBAAP;;AAEA,eAAe,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAChDI,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,CAAC;AAAEC,MAAAA,EAAE,EAAE,WAAN;AAAmBC,MAAAA,KAAK,EAAE,GAA1B;AAA+BC,MAAAA,KAAK,eAAE;AAAM,QAAA,KAAK,EAAG,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtC;AAA2EC,MAAAA,IAAI,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjF,KAAD,EACQ;AAAEH,MAAAA,EAAE,EAAE,WAAN;AAAmBC,MAAAA,KAAK,EAAE,GAA1B;AAA+BC,MAAAA,KAAK,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtC;AAAyDC,MAAAA,IAAI,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA/D,KADR,CAAhB;AAEA,wBAEI,QAAC,QAAD,CACI;AADJ;AAEI,MAAA,OAAO,EAAEJ,OAFb;AAGI,MAAA,KAAK,EAAC,KAHV;AAKI,MAAA,QAAQ,EAAGE,KAAD,IAAWG,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAvB,CALzB;AAMI,MAAA,QAAQ,EAAGA,KAAD,IAAWG,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,KAAzB,CANzB,CAM0D;AAN1D;AAOI,MAAA,OAAO,EAAGK,iBAAD,IAAuBF,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,iBAAnC,CAPpC;AAQI,MAAA,MAAM,EAAE,MAAMF,OAAO,CAACC,GAAR,CAAY,OAAZ;AARlB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAaH;;AAjB+C","sourcesContent":["import React, { Component } from 'react'\r\nimport { Dropdown, Selection } from 'react-dropdown-now';\r\nimport 'react-dropdown-now/style.css';\r\nimport '../css/index.css';\r\n\r\nexport default class DropDownMenu extends Component {\r\n    render() {\r\n        const options = [{ id: 'custom-id', value: '1', label: <span class = \"dropMenu\" >Ẩn</span>, view: <span>Ẩn</span> },\r\n                                { id: 'custom-id', value: \"2\", label: <span>Hiện</span>, view: <span>Hiện</span> }];\r\n        return (\r\n            \r\n            <Dropdown\r\n                // disabled=\"True\"\r\n                options={options}\r\n                value=\"One\"\r\n\r\n                onChange={(value) => console.log('change!', value)}\r\n                onSelect={(value) => console.log('selected!', value)} // always fires once a selection happens even if there is no change\r\n                onClose={(closedBySelection) => console.log('closedBySelection?:', closedBySelection)}\r\n                onOpen={() => console.log('open!')}\r\n            />\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}